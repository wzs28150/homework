$font: 12px, 14px, 16px, 18px, 20px, 22px, 24px, 26px, 28px, 32px, 36px;
$tr4: all 0.4s, transform 0.4s; //处理动画
@mixin tr($time,$type) {
  transition: $type $time;
}
//响应式宽度判断
@mixin max-screen($res) {
  @media (max-width: $res) {
    @content;
  }
}
//响应式高度判断
@mixin maxh-screen($res) {
  @media (max-height: $res) {
    @content;
  }
}
$breakpoints: (
  small : 480px,
  medium: 700px,
  large : 1024px,
  mlarge: 1200px
);
$p-font-sizes: (
  null  : (15px, 1.3),
  small : 16px,
  medium: (17px, 1.4),
  900px : 18px,
  large : (19px, 1.45),
  1200px: 20px,
  1440px: 20px,
);
@mixin font-size($fs-map, $fs-breakpoints: $breakpoints) {
  @each $fs-breakpoint, $fs-font-size in $fs-map {
    @if $fs-breakpoint == null {
      @include make-font-size($fs-font-size);
    } @else {
      // If $fs-font-size is a key that exists in
      // $fs-breakpoints, use the value
      @if map-has-key($fs-breakpoints, $fs-breakpoint) {
        $fs-breakpoint: map-get($fs-breakpoints, $fs-breakpoint);
      }
      @media screen and (min-width: $fs-breakpoint) {
        @include make-font-size($fs-font-size);
      }
    }
  }
}
// Utility function for mixin font-size
@mixin make-font-size($fs-font-size) {
  // If $fs-font-size is a list, include
  // both font-size and line-height
  @if type-of($fs-font-size) == "list" {
    font-size: nth($fs-font-size, 1);
    @if (length($fs-font-size) > 1) {
      line-height: nth($fs-font-size, 2);
    }
  } @else {
    font-size: $fs-font-size;
  }
}
$container-sizes: (
  null  : (auto, 0px 5%),
  large : (980px, 0px auto),
  1200px: (1200px, 0px auto),
  1440px: (1200px, 0px auto)
);
@mixin container-width($fs-map, $fs-breakpoints: $breakpoints) {
  @each $fs-breakpoint, $fs-font-size in $fs-map {
    @if $fs-breakpoint == null {
      @include make-container-width($fs-font-size);
    } @else {
      @if map-has-key($fs-breakpoints, $fs-breakpoint) {
        $fs-breakpoint: map-get($fs-breakpoints, $fs-breakpoint);
      }
      @media screen and (min-width: $fs-breakpoint) {
        @include make-container-width($fs-font-size);
      }
    }
  }
}
@mixin make-container-width($fs-font-size) {
  @if type-of($fs-font-size) == "list" {
    width: nth($fs-font-size, 1);
    @if (length($fs-font-size) > 1) {
      margin: nth($fs-font-size, 2);
    }
  } @else {
    width: $fs-font-size;
  }
}